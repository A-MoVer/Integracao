{"ast":null,"code":"import { getReceitaById } from \"@/services/receitas\";\nimport axios from \"../axios\";\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      recipe: {},\n      // Define como um objeto vazio inicialmente\n      newComment: \"\" // Texto do novo comentário\n    };\n  },\n  mounted() {\n    console.log(\"Componente montado com ID:\", this.id);\n    this.fetchRecipeDetail();\n  },\n  methods: {\n    async fetchRecipeDetail() {\n      try {\n        this.recipe = await getReceitaById(this.id);\n        console.log(\"Receita carregada:\", this.recipe);\n      } catch (error) {\n        console.error(\"Erro ao buscar detalhes da receita:\", error);\n      }\n    },\n    async addComment() {\n      if (!this.newComment.trim()) {\n        alert(\"O comentário não pode estar vazio.\");\n        return;\n      }\n      console.log(\"Comentário enviado:\", this.newComment);\n      try {\n        const token = localStorage.getItem(\"userToken\"); // Token do utilizador autenticado\n        const response = await axios.post(`/receitas/${this.id}/comments`, {\n          text: this.newComment\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        console.log(\"Resposta da API:\", response.data);\n        this.newComment = \"\"; // Limpa o campo do formulário\n      } catch (error) {\n        console.error(\"Erro ao adicionar comentário:\", error);\n        alert(\"Erro ao adicionar o comentário. Tenta novamente.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["getReceitaById","axios","props","data","recipe","newComment","mounted","console","log","id","fetchRecipeDetail","methods","error","addComment","trim","alert","token","localStorage","getItem","response","post","text","headers","Authorization"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\RecipeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"recipe-detail\">\r\n    <h2>{{ recipe.title }}</h2>\r\n    <img :src=\"recipe.image\" alt=\"Recipe Image\" class=\"recipe-image\" />\r\n    <p>{{ recipe.description }}</p>\r\n    <p><strong>Likes:</strong> {{ recipe.likes }}</p>\r\n\r\n    <!-- Formulário para Adicionar Comentário -->\r\n    <div class=\"add-comment\">\r\n      <h3>Adicionar um comentário</h3>\r\n      <textarea\r\n        v-model=\"newComment\"\r\n        placeholder=\"Escreve o teu comentário aqui\"\r\n        rows=\"3\"\r\n      ></textarea>\r\n      <button @click=\"addComment\">Enviar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getReceitaById } from \"@/services/receitas\";\r\nimport axios from \"../axios\";\r\n\r\nexport default {\r\n  props: [\"id\"],\r\n  data() {\r\n    return {\r\n      recipe: {}, // Define como um objeto vazio inicialmente\r\n      newComment: \"\", // Texto do novo comentário\r\n    };\r\n  },\r\n  mounted() {\r\n    console.log(\"Componente montado com ID:\", this.id);\r\n    this.fetchRecipeDetail();\r\n  },\r\n  methods: {\r\n    async fetchRecipeDetail() {\r\n      try {\r\n        this.recipe = await getReceitaById(this.id);\r\n        console.log(\"Receita carregada:\", this.recipe);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar detalhes da receita:\", error);\r\n      }\r\n    },\r\n    async addComment() {\r\n      if (!this.newComment.trim()) {\r\n        alert(\"O comentário não pode estar vazio.\");\r\n        return;\r\n      }\r\n\r\n      console.log(\"Comentário enviado:\", this.newComment);\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"userToken\"); // Token do utilizador autenticado\r\n        const response = await axios.post(\r\n          `/receitas/${this.id}/comments`,\r\n          { text: this.newComment },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        console.log(\"Resposta da API:\", response.data);\r\n        this.newComment = \"\"; // Limpa o campo do formulário\r\n      } catch (error) {\r\n        console.error(\"Erro ao adicionar comentário:\", error);\r\n        alert(\"Erro ao adicionar o comentário. Tenta novamente.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AAqBA,SAASA,cAAa,QAAS,qBAAqB;AACpD,OAAOC,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,CAAC,CAAC;MAAE;MACZC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,IAAI,CAACC,EAAE,CAAC;IAClD,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,CAACN,MAAK,GAAI,MAAMJ,cAAc,CAAC,IAAI,CAACS,EAAE,CAAC;QAC3CF,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACJ,MAAM,CAAC;MAChD,EAAE,OAAOQ,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACD,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACR,UAAU,CAACS,IAAI,CAAC,CAAC,EAAE;QAC3BC,KAAK,CAAC,oCAAoC,CAAC;QAC3C;MACF;MAEAR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAACH,UAAU,CAAC;MAEnD,IAAI;QACF,MAAMW,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;QACjD,MAAMC,QAAO,GAAI,MAAMlB,KAAK,CAACmB,IAAI,CAC/B,aAAa,IAAI,CAACX,EAAE,WAAW,EAC/B;UAAEY,IAAI,EAAE,IAAI,CAAChB;QAAW,CAAC,EACzB;UAAEiB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAAE,CAClD,CAAC;QACDT,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEW,QAAQ,CAAChB,IAAI,CAAC;QAC9C,IAAI,CAACE,UAAS,GAAI,EAAE,EAAE;MACxB,EAAE,OAAOO,KAAK,EAAE;QACdL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDG,KAAK,CAAC,kDAAkD,CAAC;MAC3D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}