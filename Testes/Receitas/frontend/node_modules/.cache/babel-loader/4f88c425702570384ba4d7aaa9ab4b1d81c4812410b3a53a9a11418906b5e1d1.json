{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { getReceitaById, getUserById } from \"@/services/receitas\";\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      receita: null,\n      nomeCriador: null,\n      carregando: true,\n      erro: null,\n      comentarios: [],\n      // Inicializa como array vazio\n      novoComentario: \"\" // Inicializa o campo do novo comentário\n    };\n  },\n  methods: {\n    getFileName(fileUrl) {\n      if (!fileUrl) return null;\n      return fileUrl.split(\"/\").pop(); // Extrai o nome do arquivo\n    },\n    async carregarNomeCriador(chefId) {\n      try {\n        const user = await getUserById(chefId);\n        this.nomeCriador = user.name;\n      } catch (error) {\n        console.error(\"Erro ao ir buscar o nome do criador:\", error);\n        this.nomeCriador = \"Autor desconhecido\";\n      }\n    },\n    isYouTubeVideo(url) {\n      return url.includes(\"youtube.com\") || url.includes(\"youtu.be\");\n    },\n    getEmbedYouTubeUrl(url) {\n      const videoId = url.includes(\"youtu.be\") ? url.split(\"/\").pop() : new URL(url).searchParams.get(\"v\");\n      return `https://www.youtube.com/embed/${videoId}`;\n    }\n  },\n  async created() {\n    try {\n      this.carregando = true;\n\n      // Carregar a receita\n      this.receita = await getReceitaById(this.id);\n      console.log(\"ID DA RECEITA: \");\n\n      // Carregar o nome do criador com base no chef_id\n      if (this.receita.chef_id) {\n        await this.carregarNomeCriador(this.receita.chef_id);\n      }\n\n      // Carregar os comentários associados à receita\n      await this.carregarInteracoes();\n    } catch (error) {\n      this.erro = \"Erro ao carregar os detalhes da receita.\";\n    } finally {\n      this.carregando = false;\n    }\n  },\n  async carregarInteracoes() {\n    try {\n      // Faz a chamada para buscar as interações da receita específica\n      const response = await fetch(`/interactions/Recipe/${this.id}`);\n      if (!response.ok) {\n        throw new Error(\"Erro ao carregar interações\");\n      }\n      const data = await response.json();\n      console.log(\"Dados retornados pela API:\", data);\n\n      // Filtra e mapeia apenas os comentários\n      this.comentarios = data.filter(interacao => interacao.type === \"comment\").map(comment => ({\n        id: comment._id,\n        author: comment.user_id?.name || \"Anônimo\",\n        avatar: comment.user_id?.avatar_url || \"https://cdn-icons-png.flaticon.com/512/7414/7414124.png\",\n        // Adiciona um avatar padrão\n        text: comment.comment_text,\n        date: new Date(comment.interaction_date).toLocaleString()\n      }));\n    } catch (error) {\n      console.error(\"Erro ao carregar interações:\", error);\n      this.comentarios = []; // Garante que os comentários serão um array vazio em caso de erro\n    }\n  },\n  async adicionarComentario() {\n    if (!this.novoComentario.trim()) return;\n    try {\n      const response = await fetch('/interactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user_id: \"USER_ID\",\n          // Substitua com o ID do usuário autenticado\n          recipe_id: this.id,\n          type: 'comment',\n          // Tipo de interação\n          comment_text: this.novoComentario // Texto do comentário\n        })\n      });\n      if (response.ok) {\n        const novoComentario = await response.json();\n        this.comentarios.push({\n          id: novoComentario._id,\n          author: \"Usuário Atual\",\n          // Substitua pelo nome do usuário autenticado\n          text: novoComentario.comment_text,\n          date: new Date(novoComentario.interaction_date).toLocaleString()\n        });\n        this.novoComentario = \"\"; // Limpa o campo de texto\n      } else {\n        console.error('Erro ao adicionar comentário:', await response.json());\n      }\n    } catch (error) {\n      console.error('Erro ao adicionar comentário:', error);\n    }\n  },\n  async excluirComentario(comentarioId) {\n    try {\n      const response = await fetch(`/interactions/${comentarioId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        this.comentarios = this.comentarios.filter(c => c.id !== comentarioId);\n      } else {\n        console.error('Erro ao excluir comentário:', await response.json());\n      }\n    } catch (error) {\n      console.error('Erro ao excluir comentário:', error);\n    }\n  }\n};","map":{"version":3,"names":["getReceitaById","getUserById","props","data","receita","nomeCriador","carregando","erro","comentarios","novoComentario","methods","getFileName","fileUrl","split","pop","carregarNomeCriador","chefId","user","name","error","console","isYouTubeVideo","url","includes","getEmbedYouTubeUrl","videoId","URL","searchParams","get","created","id","log","chef_id","carregarInteracoes","response","fetch","ok","Error","json","filter","interacao","type","map","comment","_id","author","user_id","avatar","avatar_url","text","comment_text","date","Date","interaction_date","toLocaleString","adicionarComentario","trim","method","headers","body","JSON","stringify","recipe_id","push","excluirComentario","comentarioId","c"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\ReceitasDetalhe.vue"],"sourcesContent":["<template>\r\n  <header class=\"navbar\">\r\n    <div class=\"logo-container\">\r\n      <img src=\"@/assets/icon.png\" alt=\"Logo EuCozinho\" class=\"logo\" />\r\n      <h1>EuCozinho</h1>\r\n    </div>\r\n    <nav>\r\n      <router-link to=\"/home\">Receitas</router-link>\r\n      <router-link :to=\"{ name: 'ChefDetail', params: { id: 1 } }\">Chefes</router-link>\r\n      <router-link to=\"/profile\" class=\"profile-icon\">\r\n            <img src=\"@/assets/perfil.png\" alt=\"Perfil\" />\r\n      </router-link>\r\n      <router-link to=\"/\">Logout</router-link>\r\n    </nav>\r\n  </header>\r\n    <div class=\"recipe-detail\">\r\n    <div v-if=\"receita\">\r\n      <!-- Imagem Principal -->\r\n      <img \r\n        v-if=\"receita.image_url\" \r\n        :src=\"receita.image_url\" \r\n        alt=\"Imagem da Receita\" \r\n        class=\"recipe-main-image\"\r\n      />\r\n\r\n      <!-- Informações da Receita -->\r\n      <div class=\"recipe-header\">\r\n        <h1 class=\"recipe-title\">\r\n          {{ receita.title }} - por {{ nomeCriador || 'Autor desconhecido' }}\r\n        </h1>\r\n        <div class=\"recipe-meta\">\r\n          <p><strong>Tempo de Preparo:</strong> {{ receita.prep_time || 'N/A' }} minutos</p>\r\n          <p><strong>Dificuldade:</strong> {{ receita.difficulty || 'N/A' }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Descrição -->\r\n      <div class=\"recipe-body\">\r\n        <h2>Descrição</h2>\r\n        <p>{{ receita.description || 'Descrição não disponível' }}</p>\r\n      </div>\r\n\r\n      <!-- Vídeo -->\r\n      <div class=\"recipe-video-container\" v-if=\"receita.video_url\">\r\n        <h2>Vídeo</h2>\r\n        <iframe\r\n          v-if=\"isYouTubeVideo(receita.video_url)\"\r\n          :src=\"getEmbedYouTubeUrl(receita.video_url)\"\r\n          frameborder=\"0\"\r\n          allowfullscreen\r\n          class=\"recipe-video\"\r\n        ></iframe>\r\n        <video \r\n          v-else \r\n          :src=\"receita.video_url\" \r\n          controls \r\n          autoplay \r\n          class=\"recipe-video\"\r\n        ></video>\r\n      </div>\r\n    </div>\r\n    <div v-else-if=\"carregando\">\r\n      <p>A carregar...</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>Erro ao carregar a receita. Por favor, tente novamente mais tarde.</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"comments-section\">\r\n    <h2>Comentários</h2>\r\n    <!-- Lista de Comentários -->\r\n    <div v-if=\"comentarios.length > 0\" class=\"comment-list\">\r\n      <div\r\n        v-for=\"(comentario, index) in comentarios\"\r\n        :key=\"comentario.id || index\"\r\n        class=\"comment-item\"\r\n      >\r\n        <div class=\"comment-avatar\">\r\n          <img\r\n            :src=\"comentario.avatar || 'https://cdn-icons-png.flaticon.com/512/7414/7414124.png'\"\r\n            alt=\"Avatar\"\r\n          />\r\n        </div>\r\n        <div class=\"comment-content\">\r\n          <p class=\"comment-author\">{{ comentario.author }}</p>\r\n          <p class=\"comment-text\">{{ comentario.text }}</p>\r\n          <small class=\"comment-date\">{{ comentario.date }}</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>Não há comentários para esta receita. Seja o primeiro a comentar!</p>\r\n    </div>\r\n  </div>\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport { getReceitaById, getUserById } from \"@/services/receitas\";\r\n\r\nexport default {\r\n  props: [\"id\"],\r\n    data() {\r\n    return {\r\n      receita: null,\r\n      nomeCriador: null,\r\n      carregando: true,\r\n      erro: null,\r\n      comentarios: [], // Inicializa como array vazio\r\n      novoComentario: \"\", // Inicializa o campo do novo comentário\r\n    };\r\n  },\r\n  methods: {\r\n    getFileName(fileUrl) {\r\n      if (!fileUrl) return null;\r\n      return fileUrl.split(\"/\").pop(); // Extrai o nome do arquivo\r\n    },\r\n    async carregarNomeCriador(chefId) {\r\n      try {\r\n        const user = await getUserById(chefId);\r\n        this.nomeCriador = user.name;\r\n      } catch (error) {\r\n        console.error(\"Erro ao ir buscar o nome do criador:\", error);\r\n        this.nomeCriador = \"Autor desconhecido\";\r\n      }\r\n    },\r\n    isYouTubeVideo(url) {\r\n      return url.includes(\"youtube.com\") || url.includes(\"youtu.be\");\r\n    },\r\n    getEmbedYouTubeUrl(url) {\r\n      const videoId = url.includes(\"youtu.be\")\r\n        ? url.split(\"/\").pop()\r\n        : new URL(url).searchParams.get(\"v\");\r\n      return `https://www.youtube.com/embed/${videoId}`;\r\n    },\r\n  },\r\n  async created() {\r\n    try {\r\n      this.carregando = true;\r\n\r\n      // Carregar a receita\r\n      this.receita = await getReceitaById(this.id);\r\n      console.log(\"ID DA RECEITA: \")\r\n\r\n      // Carregar o nome do criador com base no chef_id\r\n      if (this.receita.chef_id) {\r\n        await this.carregarNomeCriador(this.receita.chef_id);\r\n      }\r\n\r\n      // Carregar os comentários associados à receita\r\n      await this.carregarInteracoes();\r\n    } catch (error) {\r\n      this.erro = \"Erro ao carregar os detalhes da receita.\";\r\n    } finally {\r\n      this.carregando = false;\r\n    }\r\n  },\r\n  async carregarInteracoes() {\r\n  try {\r\n    // Faz a chamada para buscar as interações da receita específica\r\n    const response = await fetch(`/interactions/Recipe/${this.id}`);\r\n    if (!response.ok) {\r\n      throw new Error(\"Erro ao carregar interações\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Dados retornados pela API:\", data);\r\n\r\n    // Filtra e mapeia apenas os comentários\r\n    this.comentarios = data\r\n      .filter((interacao) => interacao.type === \"comment\")\r\n      .map((comment) => ({\r\n        id: comment._id,\r\n        author: comment.user_id?.name || \"Anônimo\",\r\n        avatar:\r\n          comment.user_id?.avatar_url ||\r\n          \"https://cdn-icons-png.flaticon.com/512/7414/7414124.png\", // Adiciona um avatar padrão\r\n        text: comment.comment_text,\r\n        date: new Date(comment.interaction_date).toLocaleString(),\r\n      }));\r\n  } catch (error) {\r\n    console.error(\"Erro ao carregar interações:\", error);\r\n    this.comentarios = []; // Garante que os comentários serão um array vazio em caso de erro\r\n    }\r\n  },\r\n  async adicionarComentario() {\r\n    if (!this.novoComentario.trim()) return;\r\n    try {\r\n        const response = await fetch('/interactions', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                user_id: \"USER_ID\", // Substitua com o ID do usuário autenticado\r\n                recipe_id: this.id,\r\n                type: 'comment', // Tipo de interação\r\n                comment_text: this.novoComentario, // Texto do comentário\r\n            }),\r\n        });\r\n        if (response.ok) {\r\n            const novoComentario = await response.json();\r\n            this.comentarios.push({\r\n                id: novoComentario._id,\r\n                author: \"Usuário Atual\", // Substitua pelo nome do usuário autenticado\r\n                text: novoComentario.comment_text,\r\n                date: new Date(novoComentario.interaction_date).toLocaleString(),\r\n            });\r\n            this.novoComentario = \"\"; // Limpa o campo de texto\r\n        } else {\r\n            console.error('Erro ao adicionar comentário:', await response.json());\r\n        }\r\n    } catch (error) {\r\n        console.error('Erro ao adicionar comentário:', error);\r\n    }\r\n  },\r\n  async excluirComentario(comentarioId) {\r\n    try {\r\n        const response = await fetch(`/interactions/${comentarioId}`, { method: 'DELETE' });\r\n\r\n        if (response.ok) {\r\n            this.comentarios = this.comentarios.filter(c => c.id !== comentarioId);\r\n        } else {\r\n            console.error('Erro ao excluir comentário:', await response.json());\r\n        }\r\n    } catch (error) {\r\n        console.error('Erro ao excluir comentário:', error);\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n  \r\n  <style scoped>\r\n\r\n.navbar {\r\n  background-color: #fff;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 1rem 2rem;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.logo-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.logo {\r\n  width: 40px;\r\n  height: 40px;\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n.navbar h1 {\r\n  color: #e74c3c;\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.navbar nav {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.navbar a {\r\n  margin-left: 1rem;\r\n  color: #333;\r\n  text-decoration: none;\r\n}\r\n\r\n.profile-icon img {\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n}\r\n\r\n  .recipe-detail {\r\n    max-width: 800px;\r\n    margin: 0 auto;\r\n    font-family: Arial, sans-serif;\r\n    line-height: 1.6;\r\n    color: #333;\r\n  }\r\n  \r\n  .recipe-header {\r\n    text-align: center;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .recipe-main-image {\r\n  width: 100%;\r\n  height: auto;\r\n  max-height: 400px; /* Para limitar a altura */\r\n  object-fit: cover; /* Garante que a imagem preencha o espaço */\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recipe-header {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.recipe-title {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n}\r\n\r\n.recipe-meta p {\r\n  margin: 5px 0;\r\n}\r\n\r\n.recipe-body {\r\n  margin-top: 20px;\r\n  line-height: 1.6;\r\n}\r\n\r\n.recipe-video-container {\r\n  margin-top: 30px;\r\n  text-align: center;\r\n}\r\n\r\n.recipe-video {\r\n  width: 100%;\r\n  max-width: 800px;\r\n  height: 450px; /* Define uma altura fixa proporcional */\r\n  border-radius: 8px;\r\n  margin: 0 auto;\r\n  display: block;\r\n}\r\n  \r\n  .recipe-title {\r\n    margin-top: 10px;\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .recipe-meta p {\r\n    margin: 5px 0;\r\n  }\r\n  \r\n  .recipe-body {\r\n    margin-top: 20px;\r\n  }\r\n  \r\n  iframe {\r\n    border-radius: 8px;\r\n  }\r\n  </style>\r\n\r\n.comments-section {\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.comment-list {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.comment-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.comment-avatar img {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n}\r\n\r\n.comment-content {\r\n  flex: 1;\r\n}\r\n\r\n.comment-author {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n}\r\n\r\n.comment-text {\r\n  margin-bottom: 5px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.comment-date {\r\n  font-size: 0.85rem;\r\n  color: #999;\r\n}\r\n\r\n.comment-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.comment-form textarea {\r\n  resize: none;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.btn-submit {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.btn-submit:hover {\r\n  background-color: #2980b9;\r\n}\r\n"],"mappings":";;;;;;;AAmGA,SAASA,cAAc,EAAEC,WAAU,QAAS,qBAAqB;AAEjE,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACXC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE,IAAI;MACjBC,UAAU,EAAE,IAAI;MAChBC,IAAI,EAAE,IAAI;MACVC,WAAW,EAAE,EAAE;MAAE;MACjBC,cAAc,EAAE,EAAE,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAACC,OAAO,EAAE;MACnB,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;MACzB,OAAOA,OAAO,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE;IACnC,CAAC;IACD,MAAMC,mBAAmBA,CAACC,MAAM,EAAE;MAChC,IAAI;QACF,MAAMC,IAAG,GAAI,MAAMhB,WAAW,CAACe,MAAM,CAAC;QACtC,IAAI,CAACX,WAAU,GAAIY,IAAI,CAACC,IAAI;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;QAC5D,IAAI,CAACd,WAAU,GAAI,oBAAoB;MACzC;IACF,CAAC;IACDgB,cAAcA,CAACC,GAAG,EAAE;MAClB,OAAOA,GAAG,CAACC,QAAQ,CAAC,aAAa,KAAKD,GAAG,CAACC,QAAQ,CAAC,UAAU,CAAC;IAChE,CAAC;IACDC,kBAAkBA,CAACF,GAAG,EAAE;MACtB,MAAMG,OAAM,GAAIH,GAAG,CAACC,QAAQ,CAAC,UAAU,IACnCD,GAAG,CAACT,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,IACnB,IAAIY,GAAG,CAACJ,GAAG,CAAC,CAACK,YAAY,CAACC,GAAG,CAAC,GAAG,CAAC;MACtC,OAAO,iCAAiCH,OAAO,EAAE;IACnD;EACF,CAAC;EACD,MAAMI,OAAOA,CAAA,EAAG;IACd,IAAI;MACF,IAAI,CAACvB,UAAS,GAAI,IAAI;;MAEtB;MACA,IAAI,CAACF,OAAM,GAAI,MAAMJ,cAAc,CAAC,IAAI,CAAC8B,EAAE,CAAC;MAC5CV,OAAO,CAACW,GAAG,CAAC,iBAAiB;;MAE7B;MACA,IAAI,IAAI,CAAC3B,OAAO,CAAC4B,OAAO,EAAE;QACxB,MAAM,IAAI,CAACjB,mBAAmB,CAAC,IAAI,CAACX,OAAO,CAAC4B,OAAO,CAAC;MACtD;;MAEA;MACA,MAAM,IAAI,CAACC,kBAAkB,CAAC,CAAC;IACjC,EAAE,OAAOd,KAAK,EAAE;MACd,IAAI,CAACZ,IAAG,GAAI,0CAA0C;IACxD,UAAU;MACR,IAAI,CAACD,UAAS,GAAI,KAAK;IACzB;EACF,CAAC;EACD,MAAM2B,kBAAkBA,CAAA,EAAG;IAC3B,IAAI;MACF;MACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,wBAAwB,IAAI,CAACL,EAAE,EAAE,CAAC;MAC/D,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMlC,IAAG,GAAI,MAAM+B,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClClB,OAAO,CAACW,GAAG,CAAC,4BAA4B,EAAE5B,IAAI,CAAC;;MAE/C;MACA,IAAI,CAACK,WAAU,GAAIL,IAAG,CACnBoC,MAAM,CAAEC,SAAS,IAAKA,SAAS,CAACC,IAAG,KAAM,SAAS,EAClDC,GAAG,CAAEC,OAAO,KAAM;QACjBb,EAAE,EAAEa,OAAO,CAACC,GAAG;QACfC,MAAM,EAAEF,OAAO,CAACG,OAAO,EAAE5B,IAAG,IAAK,SAAS;QAC1C6B,MAAM,EACJJ,OAAO,CAACG,OAAO,EAAEE,UAAS,IAC1B,yDAAyD;QAAE;QAC7DC,IAAI,EAAEN,OAAO,CAACO,YAAY;QAC1BC,IAAI,EAAE,IAAIC,IAAI,CAACT,OAAO,CAACU,gBAAgB,CAAC,CAACC,cAAc,CAAC;MAC1D,CAAC,CAAC,CAAC;IACP,EAAE,OAAOnC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,IAAI,CAACX,WAAU,GAAI,EAAE,EAAE;IACvB;EACF,CAAC;EACD,MAAM+C,mBAAmBA,CAAA,EAAG;IAC1B,IAAI,CAAC,IAAI,CAAC9C,cAAc,CAAC+C,IAAI,CAAC,CAAC,EAAE;IACjC,IAAI;MACA,MAAMtB,QAAO,GAAI,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC1CsB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBf,OAAO,EAAE,SAAS;UAAE;UACpBgB,SAAS,EAAE,IAAI,CAAChC,EAAE;UAClBW,IAAI,EAAE,SAAS;UAAE;UACjBS,YAAY,EAAE,IAAI,CAACzC,cAAc,CAAE;QACvC,CAAC;MACL,CAAC,CAAC;MACF,IAAIyB,QAAQ,CAACE,EAAE,EAAE;QACb,MAAM3B,cAAa,GAAI,MAAMyB,QAAQ,CAACI,IAAI,CAAC,CAAC;QAC5C,IAAI,CAAC9B,WAAW,CAACuD,IAAI,CAAC;UAClBjC,EAAE,EAAErB,cAAc,CAACmC,GAAG;UACtBC,MAAM,EAAE,eAAe;UAAE;UACzBI,IAAI,EAAExC,cAAc,CAACyC,YAAY;UACjCC,IAAI,EAAE,IAAIC,IAAI,CAAC3C,cAAc,CAAC4C,gBAAgB,CAAC,CAACC,cAAc,CAAC;QACnE,CAAC,CAAC;QACF,IAAI,CAAC7C,cAAa,GAAI,EAAE,EAAE;MAC9B,OAAO;QACHW,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAE,MAAMe,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACzE;IACJ,EAAE,OAAOnB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACF,CAAC;EACD,MAAM6C,iBAAiBA,CAACC,YAAY,EAAE;IACpC,IAAI;MACA,MAAM/B,QAAO,GAAI,MAAMC,KAAK,CAAC,iBAAiB8B,YAAY,EAAE,EAAE;QAAER,MAAM,EAAE;MAAS,CAAC,CAAC;MAEnF,IAAIvB,QAAQ,CAACE,EAAE,EAAE;QACb,IAAI,CAAC5B,WAAU,GAAI,IAAI,CAACA,WAAW,CAAC+B,MAAM,CAAC2B,CAAA,IAAKA,CAAC,CAACpC,EAAC,KAAMmC,YAAY,CAAC;MAC1E,OAAO;QACH7C,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAE,MAAMe,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACvE;IACJ,EAAE,OAAOnB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}