{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { auth } from \"@/firebase\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport axios from \"axios\";\nexport default {\n  name: \"LoginPage\",\n  methods: {\n    async loginWithGoogle() {\n      try {\n        const provider = new GoogleAuthProvider();\n        const result = await signInWithPopup(auth, provider);\n        const user = result.user;\n        console.log(\"Utilizador loggado:\", user);\n        const userData = {\n          name: user.displayName,\n          email: user.email,\n          profile_picture: user.photoURL\n        };\n\n        // Envia os dados ao backend\n        const response = await axios.post('http://localhost:3000/users/auth/google', userData);\n        console.log(\"Resposta do backend:\", response.data);\n\n        // Guarda os dados do user atual no localStorage\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n        this.$router.push(\"/home\");\n      } catch (error) {\n        console.error(\"Erro ao fazer login com Google:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["auth","GoogleAuthProvider","signInWithPopup","axios","name","methods","loginWithGoogle","provider","result","user","console","log","userData","displayName","email","profile_picture","photoURL","response","post","data","localStorage","setItem","JSON","stringify","$router","push","error"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\LoginPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-card\">\r\n      <img src=\"@/assets/icon.png\" alt=\"Logo\" class=\"logo\" />\r\n      <h2>Entrar com serviços externos</h2>\r\n      <button class=\"login-btn google-login\" @click=\"loginWithGoogle\">Entrar com Google</button>\r\n      <p class=\"admin-link\">\r\n        É Administrador? <a @click=\"$router.push('/admin-login')\" style=\"cursor: pointer;\">Fazer login como Admin</a>\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport { auth } from \"@/firebase\";\r\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"LoginPage\",\r\n  methods: {\r\n    async loginWithGoogle() {\r\n    try {\r\n        const provider = new GoogleAuthProvider();\r\n        const result = await signInWithPopup(auth, provider);\r\n        const user = result.user;\r\n\r\n        console.log(\"Utilizador loggado:\", user);\r\n\r\n        const userData = {\r\n            name: user.displayName,\r\n            email: user.email,\r\n            profile_picture: user.photoURL,\r\n        };\r\n\r\n        // Envia os dados ao backend\r\n        const response = await axios.post(\r\n            'http://localhost:3000/users/auth/google',\r\n            userData\r\n        );\r\n\r\n        console.log(\"Resposta do backend:\", response.data);\r\n\r\n        // Guarda os dados do user atual no localStorage\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n\r\n        this.$router.push(\"/home\");\r\n    } catch (error) {\r\n        console.error(\"Erro ao fazer login com Google:\", error);\r\n    }\r\n  }\r\n}\r\n};\r\n</script>\r\n\r\n  \r\n  <style>\r\n  .login-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background-image: url('@/assets/background.jpg');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n  \r\n  .login-card {\r\n    background: white;\r\n    padding: 30px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    width: 300px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  .logo {\r\n    width: 80px;\r\n    height:80px;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  h2 {\r\n    margin-bottom: 20px;\r\n    font-size: 1.2em;\r\n    color: #333;\r\n    text-align: center;\r\n  }\r\n  \r\n  .google-login {\r\n    background: #4285f4;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    font-size: 1em;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .google-login:hover {\r\n    background: #357ae8;\r\n  }\r\n  \r\n  .admin-link {\r\n    font-size: 0.9em;\r\n  }\r\n  \r\n  .admin-link a {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .admin-link a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  </style>\r\n  "],"mappings":";AAeA,SAASA,IAAG,QAAS,YAAY;AACjC,SAASC,kBAAkB,EAAEC,eAAc,QAAS,eAAe;AACnE,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACxB,IAAI;QACA,MAAMC,QAAO,GAAI,IAAIN,kBAAkB,CAAC,CAAC;QACzC,MAAMO,MAAK,GAAI,MAAMN,eAAe,CAACF,IAAI,EAAEO,QAAQ,CAAC;QACpD,MAAME,IAAG,GAAID,MAAM,CAACC,IAAI;QAExBC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,IAAI,CAAC;QAExC,MAAMG,QAAO,GAAI;UACbR,IAAI,EAAEK,IAAI,CAACI,WAAW;UACtBC,KAAK,EAAEL,IAAI,CAACK,KAAK;UACjBC,eAAe,EAAEN,IAAI,CAACO;QAC1B,CAAC;;QAED;QACA,MAAMC,QAAO,GAAI,MAAMd,KAAK,CAACe,IAAI,CAC7B,yCAAyC,EACzCN,QACJ,CAAC;QAEDF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEM,QAAQ,CAACE,IAAI,CAAC;;QAElD;QACAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACE,IAAI,CAAC,CAAC;QAE3D,IAAI,CAACK,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;MAC9B,EAAE,OAAOC,KAAK,EAAE;QACZhB,OAAO,CAACgB,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACF;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}