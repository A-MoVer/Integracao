{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport \"core-js/modules/esnext.iterator.map.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport { getAuth } from \"firebase/auth\";\nimport axios from '../axios'; // Certifique-se de que este caminho está correto\nimport { getReceitaById, getUserById } from \"@/services/receitas\";\nasync function obterTokenFirebase() {\n  const auth = getAuth();\n  const currentUser = auth.currentUser;\n  if (currentUser) {\n    const token = await currentUser.getIdToken();\n    console.log(\"Token diretamente do Firebase:\", token);\n    return token;\n  } else {\n    throw new Error(\"Utilizador não autenticado.\");\n  }\n}\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      receita: null,\n      nomeCriador: null,\n      carregando: true,\n      erro: null,\n      comentarios: [],\n      novoComentario: \"\"\n    };\n  },\n  methods: {\n    async carregarNomeCriador(chefId) {\n      try {\n        const user = await getUserById(chefId);\n        this.nomeCriador = user.name;\n      } catch (error) {\n        console.error(\"Erro ao buscar o nome do criador:\", error);\n        this.nomeCriador = \"Autor desconhecido\";\n      }\n    },\n    async obterTokenFirebase() {\n      const auth = getAuth();\n      const currentUser = auth.currentUser;\n      if (currentUser) {\n        return await currentUser.getIdToken();\n      } else {\n        throw new Error(\"Utilizador não autenticado.\");\n      }\n    },\n    isYouTubeVideo(url) {\n      return url.includes(\"youtube.com\") || url.includes(\"youtu.be\");\n    },\n    getEmbedYouTubeUrl(url) {\n      const videoId = url.includes(\"youtu.be\") ? url.split(\"/\").pop() : new URL(url).searchParams.get(\"v\");\n      return `https://www.youtube.com/embed/${videoId}`;\n    },\n    async carregarInteracoes() {\n      try {\n        const response = await fetch(`/interactions/Recipe/${this.id}`);\n        if (!response.ok) throw new Error(\"Erro ao carregar interações\");\n        const data = await response.json();\n        this.comentarios = data.filter(interacao => interacao.type === \"comment\").map(comment => ({\n          id: comment._id,\n          author: comment.user_id?.name || \"Anônimo\",\n          avatar: comment.user_id?.avatar_url || \"https://cdn-icons-png.flaticon.com/512/7414/7414124.png\",\n          text: comment.comment_text,\n          date: new Date(comment.interaction_date).toLocaleString()\n        }));\n      } catch (error) {\n        console.error(\"Erro ao carregar interações:\", error);\n        this.comentarios = [];\n      }\n    },\n    async adicionarComentario() {\n      if (!this.novoComentario.trim()) {\n        alert(\"O comentário não pode estar vazio.\");\n        return;\n      }\n      try {\n        const token = await this.obterTokenFirebase(); // Obter token do Firebase\n        const response = await axios.post(\"/interactions\",\n        // URL para o backend\n        {\n          recipe_id: this.id,\n          // Certifica-te de que este valor existe\n          type: \"comment\",\n          comment_text: this.novoComentario\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            // Adicionar token no cabeçalho\n            \"Content-Type\": \"application/json\" // Tipo de conteúdo JSON\n          }\n        });\n        if (response.status === 201) {\n          const novoComentario = response.data;\n          this.comentarios.push({\n            id: novoComentario._id,\n            author: \"Usuário Atual\",\n            // Ajusta conforme necessário\n            text: novoComentario.comment_text,\n            date: new Date(novoComentario.interaction_date).toLocaleString()\n          });\n          this.novoComentario = \"\"; // Limpa o campo de texto\n        } else {\n          alert(\"Erro ao adicionar o comentário.\");\n        }\n      } catch (error) {\n        console.error(\"Erro ao adicionar comentário:\", error);\n        alert(\"Erro ao adicionar o comentário. Tente novamente.\");\n      }\n    }\n  },\n  async created() {\n    try {\n      this.carregando = true;\n      this.receita = await getReceitaById(this.id);\n      if (this.receita.chef_id) {\n        await this.carregarNomeCriador(this.receita.chef_id);\n      }\n      await this.carregarInteracoes();\n    } catch (error) {\n      this.erro = \"Erro ao carregar os detalhes da receita.\";\n    } finally {\n      this.carregando = false;\n    }\n  }\n};","map":{"version":3,"names":["getAuth","axios","getReceitaById","getUserById","obterTokenFirebase","auth","currentUser","token","getIdToken","console","log","Error","props","data","receita","nomeCriador","carregando","erro","comentarios","novoComentario","methods","carregarNomeCriador","chefId","user","name","error","isYouTubeVideo","url","includes","getEmbedYouTubeUrl","videoId","split","pop","URL","searchParams","get","carregarInteracoes","response","fetch","id","ok","json","filter","interacao","type","map","comment","_id","author","user_id","avatar","avatar_url","text","comment_text","date","Date","interaction_date","toLocaleString","adicionarComentario","trim","alert","post","recipe_id","headers","Authorization","status","push","created","chef_id"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\ReceitasDetalhe.vue"],"sourcesContent":["<template>\r\n  <header class=\"navbar\">\r\n    <div class=\"logo-container\">\r\n      <img src=\"@/assets/icon.png\" alt=\"Logo EuCozinho\" class=\"logo\" />\r\n      <h1>EuCozinho</h1>\r\n    </div>\r\n    <nav>\r\n      <router-link to=\"/home\">Receitas</router-link>\r\n      <router-link :to=\"{ name: 'ChefDetail', params: { id: 1 } }\">Chefes</router-link>\r\n      <router-link to=\"/profile\" class=\"profile-icon\">\r\n        <img src=\"@/assets/perfil.png\" alt=\"Perfil\" />\r\n      </router-link>\r\n      <router-link to=\"/\">Logout</router-link>\r\n    </nav>\r\n  </header>\r\n\r\n  <div class=\"recipe-detail\">\r\n    <div v-if=\"receita\">\r\n      <img \r\n        v-if=\"receita.image_url\" \r\n        :src=\"receita.image_url\" \r\n        alt=\"Imagem da Receita\" \r\n        class=\"recipe-main-image\"\r\n      />\r\n      <div class=\"recipe-header\">\r\n        <h1 class=\"recipe-title\">\r\n          {{ receita.title }} - por {{ nomeCriador || 'Autor desconhecido' }}\r\n        </h1>\r\n        <div class=\"recipe-meta\">\r\n          <p><strong>Tempo de Preparo:</strong> {{ receita.prep_time || 'N/A' }} minutos</p>\r\n          <p><strong>Dificuldade:</strong> {{ receita.difficulty || 'N/A' }}</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"recipe-body\">\r\n        <h2>Descrição</h2>\r\n        <p>{{ receita.description || 'Descrição não disponível' }}</p>\r\n      </div>\r\n      <div class=\"recipe-video-container\" v-if=\"receita.video_url\">\r\n        <h2>Vídeo</h2>\r\n        <iframe\r\n          v-if=\"isYouTubeVideo(receita.video_url)\"\r\n          :src=\"getEmbedYouTubeUrl(receita.video_url)\"\r\n          frameborder=\"0\"\r\n          allowfullscreen\r\n          class=\"recipe-video\"\r\n        ></iframe>\r\n        <video \r\n          v-else \r\n          :src=\"receita.video_url\" \r\n          controls \r\n          autoplay \r\n          class=\"recipe-video\"\r\n        ></video>\r\n      </div>\r\n    </div>\r\n    <div v-else-if=\"carregando\">\r\n      <p>A carregar...</p>\r\n    </div>\r\n    <div v-else>\r\n      <p>Erro ao carregar a receita. Por favor, tente novamente mais tarde.</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"comments-section\">\r\n    <h2>Comentários</h2>\r\n    <div v-if=\"comentarios.length > 0\" class=\"comment-list\">\r\n      <div\r\n        v-for=\"(comentario, index) in comentarios\"\r\n        :key=\"comentario.id || index\"\r\n        class=\"comment-item\"\r\n      >\r\n        <div class=\"comment-avatar\">\r\n          <img\r\n            :src=\"comentario.avatar || 'https://cdn-icons-png.flaticon.com/512/7414/7414124.png'\"\r\n            alt=\"Avatar\"\r\n          />\r\n        </div>\r\n        <div class=\"comment-content\">\r\n          <p class=\"comment-author\">{{ comentario.author }}</p>\r\n          <p class=\"comment-text\">{{ comentario.text }}</p>\r\n          <small class=\"comment-date\">{{ comentario.date }}</small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div v-else>\r\n      <p>Não há comentários para esta receita. Seja o primeiro a comentar!</p>\r\n    </div>\r\n    <div class=\"comment-form\">\r\n      <textarea\r\n        v-model=\"novoComentario\"\r\n        placeholder=\"Adicione um comentário...\"\r\n        rows=\"3\"\r\n        required\r\n      ></textarea>\r\n      <button class=\"btn-submit\" @click=\"adicionarComentario\">Enviar Comentário</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAuth } from \"firebase/auth\";\r\nimport axios from '../axios';  // Certifique-se de que este caminho está correto\r\nimport { getReceitaById, getUserById } from \"@/services/receitas\";\r\n\r\nasync function obterTokenFirebase() {\r\n  const auth = getAuth();\r\n  const currentUser = auth.currentUser;\r\n\r\n  if (currentUser) {\r\n    const token = await currentUser.getIdToken();\r\n    console.log(\"Token diretamente do Firebase:\", token);\r\n    return token;\r\n  } else {\r\n    throw new Error(\"Utilizador não autenticado.\");\r\n  }\r\n}\r\nexport default {\r\n  props: [\"id\"],\r\n  data() {\r\n    return {\r\n      receita: null,\r\n      nomeCriador: null,\r\n      carregando: true,\r\n      erro: null,\r\n      comentarios: [],\r\n      novoComentario: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async carregarNomeCriador(chefId) {\r\n      try {\r\n        const user = await getUserById(chefId);\r\n        this.nomeCriador = user.name;\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar o nome do criador:\", error);\r\n        this.nomeCriador = \"Autor desconhecido\";\r\n      }\r\n    },\r\n    async obterTokenFirebase() {\r\n      const auth = getAuth();\r\n      const currentUser = auth.currentUser;\r\n\r\n      if (currentUser) {\r\n        return await currentUser.getIdToken();\r\n      } else {\r\n        throw new Error(\"Utilizador não autenticado.\");\r\n      }\r\n    },\r\n    isYouTubeVideo(url) {\r\n      return url.includes(\"youtube.com\") || url.includes(\"youtu.be\");\r\n    },\r\n    getEmbedYouTubeUrl(url) {\r\n      const videoId = url.includes(\"youtu.be\")\r\n        ? url.split(\"/\").pop()\r\n        : new URL(url).searchParams.get(\"v\");\r\n      return `https://www.youtube.com/embed/${videoId}`;\r\n    },\r\n    async carregarInteracoes() {\r\n      try {\r\n        const response = await fetch(`/interactions/Recipe/${this.id}`);\r\n        if (!response.ok) throw new Error(\"Erro ao carregar interações\");\r\n\r\n        const data = await response.json();\r\n        this.comentarios = data\r\n          .filter((interacao) => interacao.type === \"comment\")\r\n          .map((comment) => ({\r\n            id: comment._id,\r\n            author: comment.user_id?.name || \"Anônimo\",\r\n            avatar:\r\n              comment.user_id?.avatar_url ||\r\n              \"https://cdn-icons-png.flaticon.com/512/7414/7414124.png\",\r\n            text: comment.comment_text,\r\n            date: new Date(comment.interaction_date).toLocaleString(),\r\n          }));\r\n      } catch (error) {\r\n        console.error(\"Erro ao carregar interações:\", error);\r\n        this.comentarios = [];\r\n      }\r\n    },\r\n    async adicionarComentario() {\r\n  if (!this.novoComentario.trim()) {\r\n    alert(\"O comentário não pode estar vazio.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const token = await this.obterTokenFirebase(); // Obter token do Firebase\r\n    const response = await axios.post(\r\n      \"/interactions\", // URL para o backend\r\n      {\r\n        recipe_id: this.id, // Certifica-te de que este valor existe\r\n        type: \"comment\",\r\n        comment_text: this.novoComentario,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Adicionar token no cabeçalho\r\n          \"Content-Type\": \"application/json\", // Tipo de conteúdo JSON\r\n        },\r\n      }\r\n    );\r\n\r\n    if (response.status === 201) {\r\n      const novoComentario = response.data;\r\n      this.comentarios.push({\r\n        id: novoComentario._id,\r\n        author: \"Usuário Atual\", // Ajusta conforme necessário\r\n        text: novoComentario.comment_text,\r\n        date: new Date(novoComentario.interaction_date).toLocaleString(),\r\n      });\r\n      this.novoComentario = \"\"; // Limpa o campo de texto\r\n    } else {\r\n      alert(\"Erro ao adicionar o comentário.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Erro ao adicionar comentário:\", error);\r\n    alert(\"Erro ao adicionar o comentário. Tente novamente.\");\r\n  }\r\n}\r\n\r\n  },\r\n  async created() {\r\n    try {\r\n      this.carregando = true;\r\n      this.receita = await getReceitaById(this.id);\r\n      if (this.receita.chef_id) {\r\n        await this.carregarNomeCriador(this.receita.chef_id);\r\n      }\r\n      await this.carregarInteracoes();\r\n    } catch (error) {\r\n      this.erro = \"Erro ao carregar os detalhes da receita.\";\r\n    } finally {\r\n      this.carregando = false;\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.comments-section {\r\n  margin-top: 30px;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.comment-list {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.comment-item {\r\n  display: flex;\r\n  align-items: flex-start;\r\n  margin-bottom: 15px;\r\n  padding: 10px;\r\n  background: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 8px;\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.comment-avatar img {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n}\r\n\r\n.comment-content {\r\n  flex: 1;\r\n}\r\n\r\n.comment-author {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n  color: #333;\r\n}\r\n\r\n.comment-text {\r\n  margin-bottom: 5px;\r\n  line-height: 1.5;\r\n}\r\n\r\n.comment-date {\r\n  font-size: 0.85rem;\r\n  color: #999;\r\n}\r\n\r\n.comment-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.comment-form textarea {\r\n  resize: none;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n  border: 1px solid #ddd;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.btn-submit {\r\n  background-color: #3498db;\r\n  color: white;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\n.btn-submit:hover {\r\n  background-color: #2980b9;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}