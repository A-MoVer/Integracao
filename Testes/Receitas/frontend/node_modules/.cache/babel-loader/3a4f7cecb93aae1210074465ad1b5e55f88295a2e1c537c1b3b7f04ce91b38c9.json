{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"CreateAdminAccount\",\n  data() {\n    return {\n      nome: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      fotoPerfil: \"\"\n    };\n  },\n  methods: {\n    async handleCreateAccount() {\n      if (this.password !== this.confirmPassword) {\n        alert(\"As senhas não coincidem!\");\n        return;\n      }\n\n      // Dados a serem enviados para o backend\n      const userData = {\n        name: this.nome,\n        email: this.email,\n        password: this.password,\n        user_type: \"chef\",\n        // Define o tipo como 'admin'\n        profile_picture: this.fotoPerfil || \"https://cdn-icons-png.flaticon.com/512/7414/7414124.png\" // Foto de perfil padrão se não for fornecida\n      };\n      try {\n        // Faz a requisição ao backend\n        const response = await fetch(\"http://localhost:3000/users\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userData)\n        });\n        if (!response.ok) {\n          const errorData = await response.json();\n          alert(`Erro ao criar conta: ${errorData.message}`);\n          return;\n        }\n        const newUser = await response.json(); // Aqui usamos newUser para salvar o retorno\n        console.log(\"User criado:\", newUser);\n        this.$router.push({\n          name: \"AdminLogin\"\n        });\n      } catch (error) {\n        console.error(\"Erro ao criar conta:\", error);\n        alert(\"Ocorreu um erro ao criar a conta.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","nome","email","password","confirmPassword","fotoPerfil","methods","handleCreateAccount","alert","userData","user_type","profile_picture","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","message","newUser","console","log","$router","push","error"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\CreateAdminAccount.vue"],"sourcesContent":["<template>\r\n    <div class=\"admin-create-account-container\">\r\n      <div class=\"create-account-card\">\r\n        <h2>Criar uma conta de administrador</h2>\r\n        <form @submit.prevent=\"handleCreateAccount\">\r\n          <label for=\"nome\">Nome Completo:</label>\r\n          <input type=\"text\" id=\"nome\" v-model=\"nome\" required />\r\n  \r\n          <label for=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" v-model=\"email\" required />\r\n  \r\n          <label for=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" v-model=\"password\" required />\r\n  \r\n          <label for=\"confirm-password\">Repetir Password:</label>\r\n          <input type=\"password\" id=\"confirm-password\" v-model=\"confirmPassword\" required />\r\n\r\n          <label for=\"image\">Foto de Perfil:</label>\r\n          <input type=\"foto\" id=\"foto-perfil\" v-model=\"fotoPerfil\"/>\r\n  \r\n          <button type=\"submit\" class=\"create-account-btn\">Criar Conta</button>\r\n        </form>\r\n  \r\n        <p class=\"admin-link\">\r\n            Já tem uma conta? <a @click=\"$router.push({ name: 'AdminLogin' })\" style=\"cursor: pointer;\">Faça login</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n  name: \"CreateAdminAccount\",\r\n  data() {\r\n    return {\r\n      nome: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      fotoPerfil: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    async handleCreateAccount() {\r\n      if (this.password !== this.confirmPassword) {\r\n        alert(\"As senhas não coincidem!\");\r\n        return;\r\n      }\r\n\r\n      // Dados a serem enviados para o backend\r\n      const userData = {\r\n        name: this.nome,\r\n        email: this.email,\r\n        password: this.password,\r\n        user_type: \"chef\", // Define o tipo como 'admin'\r\n        profile_picture: this.fotoPerfil || \"https://cdn-icons-png.flaticon.com/512/7414/7414124.png\", // Foto de perfil padrão se não for fornecida\r\n      };\r\n\r\n      try {\r\n        // Faz a requisição ao backend\r\n        const response = await fetch(\"http://localhost:3000/users\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(userData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        alert(`Erro ao criar conta: ${errorData.message}`);\r\n        return;\r\n      }\r\n\r\n      const newUser = await response.json(); // Aqui usamos newUser para salvar o retorno\r\n      console.log(\"User criado:\", newUser);\r\n      this.$router.push({ name: \"AdminLogin\" });\r\n\r\n      } catch (error) {\r\n        console.error(\"Erro ao criar conta:\", error);\r\n        alert(\"Ocorreu um erro ao criar a conta.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n  </script>\r\n  \r\n  <style>\r\n  .admin-create-account-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100vh;\r\n    background-image: url('@/assets/background.jpg');\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n  }\r\n  \r\n  .create-account-card {\r\n    background: white;\r\n    padding: 30px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n    text-align: center;\r\n    width: 350px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  \r\n  h2 {\r\n    margin-bottom: 20px;\r\n    font-size: 1.4em;\r\n    color: #333;\r\n  }\r\n  \r\n  form {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  label {\r\n    font-size: 0.9em;\r\n    margin-bottom: 5px;\r\n    color: #555;\r\n  }\r\n  \r\n  input {\r\n    padding: 8px;\r\n    margin-bottom: 15px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 5px;\r\n    font-size: 1em;\r\n  }\r\n  \r\n  .create-account-btn {\r\n    background: #e63946;\r\n    color: white;\r\n    border: none;\r\n    padding: 10px 20px;\r\n    font-size: 1em;\r\n    border-radius: 5px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .create-account-btn:hover {\r\n    background: #d62839;\r\n  }\r\n  \r\n  .back-to-login {\r\n    font-size: 0.9em;\r\n    margin-top: 10px;\r\n  }\r\n  \r\n  .back-to-login a {\r\n    color: #007bff;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .back-to-login a:hover {\r\n    text-decoration: underline;\r\n  }\r\n  </style>  "],"mappings":";AA+BE,eAAe;EACfA,IAAI,EAAE,oBAAoB;EAC1BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,eAAe,EAAE,EAAE;MACnBC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,mBAAmBA,CAAA,EAAG;MAC1B,IAAI,IAAI,CAACJ,QAAO,KAAM,IAAI,CAACC,eAAe,EAAE;QAC1CI,KAAK,CAAC,0BAA0B,CAAC;QACjC;MACF;;MAEA;MACA,MAAMC,QAAO,GAAI;QACfV,IAAI,EAAE,IAAI,CAACE,IAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBO,SAAS,EAAE,MAAM;QAAE;QACnBC,eAAe,EAAE,IAAI,CAACN,UAAS,IAAK,yDAAyD,CAAE;MACjG,CAAC;MAED,IAAI;QACF;QACA,MAAMO,QAAO,GAAI,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;QAC/B,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAMC,SAAQ,GAAI,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UACvCb,KAAK,CAAC,wBAAwBY,SAAS,CAACE,OAAO,EAAE,CAAC;UAClD;QACF;QAEA,MAAMC,OAAM,GAAI,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC,EAAE;QACvCG,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEF,OAAO,CAAC;QACpC,IAAI,CAACG,OAAO,CAACC,IAAI,CAAC;UAAE5B,IAAI,EAAE;QAAa,CAAC,CAAC;MAEzC,EAAE,OAAO6B,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CpB,KAAK,CAAC,mCAAmC,CAAC;MAC5C;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}