{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      chef: null // Objeto que armazenará os detalhes do chef\n    };\n  },\n  created() {\n    this.fetchChefDetails(); // Chama a função para carregar os detalhes do chef\n  },\n  methods: {\n    // Função para buscar os detalhes do chef baseado no ID passado pela rota\n    async fetchChefDetails() {\n      const chefId = this.$route.params.id;\n      try {\n        const chefResponse = await axios.get(`http://localhost:3000/users/${chefId}`);\n        this.chef = chefResponse.data;\n        const receitasResponse = await axios.get(`http://localhost:3000/receitas/chef_id/${chefId}`);\n        this.chef.recipes = receitasResponse.data;\n      } catch (error) {\n        console.error(\"Erro ao buscar os dados do chef ou receitas:\", error.message);\n        this.chef = {};\n      }\n    },\n    // Função para retornar à página de detalhes do chef atual\n    oBack() {\n      this.$router.push({\n        name: 'ChefDetail',\n        params: {\n          id: this.$route.params.id\n        }\n      });\n    },\n    // Função para truncar descrições longas\n    truncateDescription(description) {\n      const maxLength = 10;\n      return description.length > maxLength ? description.substring(0, maxLength) + \"...\" : description;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","chef","created","fetchChefDetails","methods","chefId","$route","params","id","chefResponse","get","receitasResponse","recipes","error","console","message","oBack","$router","push","name","truncateDescription","description","maxLength","length","substring"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\ChefDetails.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"chef\" class=\"chef-details\">\r\n      <header class=\"navbar\">\r\n        <div class=\"logo-container\">\r\n          <img src=\"@/assets/icon.png\" alt=\"Logo EuCozinho\" class=\"logo\" />\r\n          <h1>EuCozinho</h1>\r\n        </div>\r\n        <nav>\r\n          <router-link to=\"/home\">Receitas</router-link>\r\n          <router-link :to=\"{ name: 'ChefDetail', params: { id: 1 } }\">Chefes</router-link>\r\n          <router-link to=\"/profile\" class=\"profile-icon\">\r\n            <img src=\"@/assets/perfil.png\" alt=\"Perfil\" />\r\n          </router-link>\r\n          <router-link to=\"/\">Logout</router-link>\r\n        </nav>\r\n      </header>\r\n  \r\n      <!-- Detalhes do chef -->\r\n      <div class=\"chef-header\">\r\n        <img :src=\"chef.profile_picture || 'default-profile.png'\" alt=\"Chef Image\" class=\"chef-image\" />\r\n        <h1>{{ chef.name }}</h1>\r\n        <p>{{ chef.bio || 'Sem bio disponível' }}</p>\r\n  \r\n        <!-- Rating do chef -->\r\n        <div class=\"chef-rating\">\r\n          <span v-for=\"n in 5\" :key=\"n\" class=\"star\">\r\n            <i :class=\"n <= chef.rating ? 'fa-solid fa-star' : 'fa-regular fa-star'\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n  \r\n      <!-- Listagem de receitas publicadas pelo chef -->\r\n      <div class=\"chef-recipes\">\r\n      <h2>Receitas Publicadas</h2>\r\n      <div class=\"recipe-list\">\r\n        <div v-for=\"recipe in chef.recipes\" :key=\"recipe._id\" class=\"recipe-card\">\r\n          <img :src=\"recipe.image || 'default-recipe.png'\" :alt=\"recipe.title\" class=\"recipe-image\" />\r\n          <h3 class=\"recipe-title\">{{ recipe.title }}</h3>\r\n          <p class=\"recipe-description\">\r\n            {{ truncateDescription(recipe.description || 'Sem descrição') }}\r\n          </p>\r\n          <router-link :to=\"{ name: 'RecipeDetail', params: { id: recipe._id } }\" class=\"recipe-button\">Ver receita</router-link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  \r\n      <button class=\"back-button\" @click=\"oBack\">Voltar</button>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        chef: null, // Objeto que armazenará os detalhes do chef\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchChefDetails(); // Chama a função para carregar os detalhes do chef\r\n    },\r\n    methods: {\r\n    // Função para buscar os detalhes do chef baseado no ID passado pela rota\r\n    async fetchChefDetails() {\r\n      const chefId = this.$route.params.id;\r\n      try {\r\n        const chefResponse = await axios.get(`http://localhost:3000/users/${chefId}`);\r\n        this.chef = chefResponse.data;\r\n\r\n        const receitasResponse = await axios.get(`http://localhost:3000/receitas/chef_id/${chefId}`);\r\n        this.chef.recipes = receitasResponse.data;\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar os dados do chef ou receitas:\", error.message);\r\n        this.chef = {};\r\n      }\r\n    },\r\n    // Função para retornar à página de detalhes do chef atual\r\n    oBack() {\r\n      this.$router.push({ name: 'ChefDetail', params: { id: this.$route.params.id } });\r\n    },\r\n    // Função para truncar descrições longas\r\n    truncateDescription(description) {\r\n      const maxLength = 10;\r\n      return description.length > maxLength ? description.substring(0, maxLength) + \"...\" : description;\r\n    },\r\n  },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Estilo da Navbar */\r\n  .navbar {\r\n    background-color: #fff;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 1rem 2rem;\r\n    border-bottom: 1px solid #ddd;\r\n  }\r\n  \r\n  .logo-container {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .logo {\r\n    width: 40px;\r\n    height: 40px;\r\n    margin-right: 0.5rem;\r\n  }\r\n  \r\n  .navbar h1 {\r\n    color: #e74c3c;\r\n    margin: 0;\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  .navbar nav {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  \r\n  .navbar a {\r\n    margin-left: 1rem;\r\n    color: #333;\r\n    text-decoration: none;\r\n  }\r\n  \r\n  .profile-icon img {\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 50%;\r\n  }\r\n  \r\n  /* Estilos para a seção de detalhes do chef */\r\n  .chef-header {\r\n    text-align: center;\r\n    margin-top: 2rem;\r\n  }\r\n  \r\n  .chef-image {\r\n    width: 150px;\r\n    height: 150px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n  \r\n  .chef-name {\r\n    font-size: 2rem;\r\n    margin: 1rem 0;\r\n  }\r\n  \r\n  .chef-bio {\r\n    font-style: italic;\r\n    color: #777;\r\n  }\r\n  \r\n  .chef-rating {\r\n    margin-top: 1rem;\r\n  }\r\n  \r\n  .star {\r\n    color: #ffcc00;\r\n    font-size: 1.5rem;\r\n  }\r\n  \r\n  .chef-recipes {\r\n    margin-top: 2rem;\r\n  }\r\n  \r\n  .recipe-list {\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n    gap: 1.5rem;\r\n  }\r\n  \r\n  .recipe-card {\r\n    width: 200px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 10px;\r\n    padding: 1rem;\r\n    text-align: center;\r\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);\r\n  }\r\n  \r\n  .recipe-image {\r\n    width: 100%;\r\n    height: auto;\r\n    border-radius: 10px;\r\n  }\r\n  \r\n  .recipe-link {\r\n    color: #ff4500;\r\n    text-decoration: none;\r\n    font-size: 1rem;\r\n  }\r\n  \r\n  .recipe-link:hover {\r\n    text-decoration: underline;\r\n  }\r\n  \r\n  /* Estilo do botão voltar */\r\n  .back-button {\r\n    background-color: #ff4500;\r\n    color: white;\r\n    border: none;\r\n    padding: 0.5rem 1rem;\r\n    border-radius: 5px;\r\n    font-size: 1rem;\r\n    cursor: pointer;\r\n    margin-top: 2rem;\r\n  }\r\n  \r\n  .back-button:hover {\r\n    background-color: #e63900;\r\n  }\r\n\r\n.recipe-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  gap: 1.5rem;\r\n}\r\n\r\n.recipe-card {\r\n  width: 250px; /* Largura ajustada para parecer com o exemplo */\r\n  border: 1px solid #ddd;\r\n  border-radius: 10px;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n  text-align: center;\r\n}\r\n\r\n.recipe-image {\r\n  width: 100%;\r\n  height: 150px; /* Altura fixa para padronizar as imagens */\r\n  object-fit: cover;\r\n}\r\n\r\n.recipe-title {\r\n  font-size: 1.25rem;\r\n  font-weight: bold;\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.recipe-description {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin: 0 0 1rem 0;\r\n}\r\n\r\n.recipe-button {\r\n  display: inline-block;\r\n  background-color: #e74c3c;\r\n  color: white;\r\n  text-decoration: none;\r\n  padding: 0.5rem 1rem;\r\n  border-radius: 5px;\r\n  font-size: 1rem;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.recipe-button:hover {\r\n  background-color: #c0392b;\r\n}\r\n</style>"],"mappings":";AAoDE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,IAAI,CAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,gBAAgB,CAAC,CAAC,EAAE;EAC3B,CAAC;EACDC,OAAO,EAAE;IACT;IACA,MAAMD,gBAAgBA,CAAA,EAAG;MACvB,MAAME,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACpC,IAAI;QACF,MAAMC,YAAW,GAAI,MAAMV,KAAK,CAACW,GAAG,CAAC,+BAA+BL,MAAM,EAAE,CAAC;QAC7E,IAAI,CAACJ,IAAG,GAAIQ,YAAY,CAACT,IAAI;QAE7B,MAAMW,gBAAe,GAAI,MAAMZ,KAAK,CAACW,GAAG,CAAC,0CAA0CL,MAAM,EAAE,CAAC;QAC5F,IAAI,CAACJ,IAAI,CAACW,OAAM,GAAID,gBAAgB,CAACX,IAAI;MAC3C,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAACE,OAAO,CAAC;QAC5E,IAAI,CAACd,IAAG,GAAI,CAAC,CAAC;MAChB;IACF,CAAC;IACD;IACAe,KAAKA,CAAA,EAAG;MACN,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,YAAY;QAAEZ,MAAM,EAAE;UAAEC,EAAE,EAAE,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC;QAAG;MAAE,CAAC,CAAC;IAClF,CAAC;IACD;IACAY,mBAAmBA,CAACC,WAAW,EAAE;MAC/B,MAAMC,SAAQ,GAAI,EAAE;MACpB,OAAOD,WAAW,CAACE,MAAK,GAAID,SAAQ,GAAID,WAAW,CAACG,SAAS,CAAC,CAAC,EAAEF,SAAS,IAAI,KAAI,GAAID,WAAW;IACnG;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}