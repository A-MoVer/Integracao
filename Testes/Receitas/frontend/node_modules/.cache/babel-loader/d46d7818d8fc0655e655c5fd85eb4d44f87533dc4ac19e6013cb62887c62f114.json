{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getReceitaById } from \"@/services/receitas\";\nimport axios from \"../axios\";\nexport default {\n  props: [\"id\"],\n  data() {\n    return {\n      recipe: null,\n      comments: [],\n      // Lista de comentários\n      newComment: \"\" // Texto do novo comentário\n    };\n  },\n  mounted() {\n    this.fetchRecipeDetail();\n    this.fetchComments(); // Buscar os comentários ao carregar o componente\n  },\n  methods: {\n    async fetchRecipeDetail() {\n      try {\n        this.recipe = await getReceitaById(this.id);\n      } catch (error) {\n        console.error(\"Erro ao buscar detalhes da receita:\", error);\n      }\n    },\n    async fetchComments() {\n      try {\n        const response = await axios.get(`/receitas/${this.id}/comments`);\n        this.comments = response.data;\n      } catch (error) {\n        console.error(\"Erro ao buscar comentários:\", error);\n      }\n    },\n    async addComment() {\n      if (!this.newComment.trim()) {\n        alert(\"O comentário não pode estar vazio.\");\n        return;\n      }\n      try {\n        const token = localStorage.getItem(\"userToken\"); // Busca o token do utilizador autenticado\n        const response = await axios.post(`/receitas/${this.id}/comments`, {\n          text: this.newComment\n        }, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        this.comments.push(response.data.comment); // Adiciona o novo comentário à lista\n        this.newComment = \"\"; // Limpa o campo do formulário\n      } catch (error) {\n        console.error(\"Erro ao adicionar comentário:\", error);\n        alert(\"Erro ao adicionar o comentário. Tenta novamente.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["getReceitaById","axios","props","data","recipe","comments","newComment","mounted","fetchRecipeDetail","fetchComments","methods","id","error","console","response","get","addComment","trim","alert","token","localStorage","getItem","post","text","headers","Authorization","push","comment"],"sources":["C:\\Users\\Diogo Resende\\Desktop\\DWA\\G7_24-25\\G7_24-25\\Receitas\\frontend\\src\\components\\RecipeDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"recipe-detail\">\r\n    <h2>{{ recipe.title }}</h2>\r\n    <img :src=\"recipe.image\" alt=\"Recipe Image\" class=\"recipe-image\" />\r\n    <p>{{ recipe.description }}</p>\r\n    <p><strong>Likes:</strong> {{ recipe.likes }}</p>\r\n\r\n    <!-- Secção de Comentários -->\r\n    <div class=\"comments-section\">\r\n      <h3>Comentários</h3>\r\n      <ul v-if=\"comments.length > 0\">\r\n        <li v-for=\"comment in comments\" :key=\"comment._id\">\r\n          <strong>{{ comment.user?.name || \"Utilizador Anónimo\" }}:</strong> {{ comment.text }}\r\n        </li>\r\n      </ul>\r\n      <p v-else>Não há comentários para esta receita. Seja o primeiro a comentar!</p>\r\n    </div>\r\n\r\n    <!-- Formulário para Adicionar Comentário -->\r\n    <div class=\"add-comment\">\r\n      <h3>Adicionar um comentário</h3>\r\n      <textarea\r\n        v-model=\"newComment\"\r\n        placeholder=\"Escreve o teu comentário aqui\"\r\n        rows=\"3\"\r\n      ></textarea>\r\n      <button @click=\"addComment\">Enviar</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getReceitaById } from \"@/services/receitas\";\r\nimport axios from \"../axios\";\r\n\r\nexport default {\r\n  props: [\"id\"],\r\n  data() {\r\n    return {\r\n      recipe: null,\r\n      comments: [], // Lista de comentários\r\n      newComment: \"\", // Texto do novo comentário\r\n    };\r\n  },\r\n  mounted() {\r\n    this.fetchRecipeDetail();\r\n    this.fetchComments(); // Buscar os comentários ao carregar o componente\r\n  },\r\n  methods: {\r\n    async fetchRecipeDetail() {\r\n      try {\r\n        this.recipe = await getReceitaById(this.id);\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar detalhes da receita:\", error);\r\n      }\r\n    },\r\n    async fetchComments() {\r\n      try {\r\n        const response = await axios.get(`/receitas/${this.id}/comments`);\r\n        this.comments = response.data;\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar comentários:\", error);\r\n      }\r\n    },\r\n    async addComment() {\r\n      if (!this.newComment.trim()) {\r\n        alert(\"O comentário não pode estar vazio.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const token = localStorage.getItem(\"userToken\"); // Busca o token do utilizador autenticado\r\n        const response = await axios.post(\r\n          `/receitas/${this.id}/comments`,\r\n          { text: this.newComment },\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n        this.comments.push(response.data.comment); // Adiciona o novo comentário à lista\r\n        this.newComment = \"\"; // Limpa o campo do formulário\r\n      } catch (error) {\r\n        console.error(\"Erro ao adicionar comentário:\", error);\r\n        alert(\"Erro ao adicionar o comentário. Tenta novamente.\");\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.recipe-detail {\r\n  padding: 2rem;\r\n}\r\n\r\n.recipe-image {\r\n  width: 100%;\r\n  height: auto;\r\n  margin-top: 1rem;\r\n}\r\n\r\nh2 {\r\n  color: #e74c3c;\r\n}\r\n\r\np {\r\n  font-size: 1.2rem;\r\n  color: #555;\r\n}\r\n\r\n.comments-section {\r\n  margin-top: 2rem;\r\n}\r\n\r\n.comments-section ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n\r\n.comments-section li {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.add-comment {\r\n  margin-top: 2rem;\r\n}\r\n\r\ntextarea {\r\n  width: 100%;\r\n  height: 100px;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\nbutton {\r\n  padding: 0.5rem 1rem;\r\n  background-color: #e74c3c;\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\nbutton:hover {\r\n  background-color: #c0392b;\r\n}\r\n</style>\r\n"],"mappings":";AAgCA,SAASA,cAAa,QAAS,qBAAqB;AACpD,OAAOC,KAAI,MAAO,UAAU;AAE5B,eAAe;EACbC,KAAK,EAAE,CAAC,IAAI,CAAC;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,EAAE;MAAE;MACdC,UAAU,EAAE,EAAE,CAAE;IAClB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;IACxB,IAAI,CAACC,aAAa,CAAC,CAAC,EAAE;EACxB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMF,iBAAiBA,CAAA,EAAG;MACxB,IAAI;QACF,IAAI,CAACJ,MAAK,GAAI,MAAMJ,cAAc,CAAC,IAAI,CAACW,EAAE,CAAC;MAC7C,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC7D;IACF,CAAC;IACD,MAAMH,aAAaA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMK,QAAO,GAAI,MAAMb,KAAK,CAACc,GAAG,CAAC,aAAa,IAAI,CAACJ,EAAE,WAAW,CAAC;QACjE,IAAI,CAACN,QAAO,GAAIS,QAAQ,CAACX,IAAI;MAC/B,EAAE,OAAOS,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACD,MAAMI,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAACV,UAAU,CAACW,IAAI,CAAC,CAAC,EAAE;QAC3BC,KAAK,CAAC,oCAAoC,CAAC;QAC3C;MACF;MAEA,IAAI;QACF,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;QACjD,MAAMP,QAAO,GAAI,MAAMb,KAAK,CAACqB,IAAI,CAC/B,aAAa,IAAI,CAACX,EAAE,WAAW,EAC/B;UAAEY,IAAI,EAAE,IAAI,CAACjB;QAAW,CAAC,EACzB;UAAEkB,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAAE,CAClD,CAAC;QACD,IAAI,CAACd,QAAQ,CAACqB,IAAI,CAACZ,QAAQ,CAACX,IAAI,CAACwB,OAAO,CAAC,EAAE;QAC3C,IAAI,CAACrB,UAAS,GAAI,EAAE,EAAE;MACxB,EAAE,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDM,KAAK,CAAC,kDAAkD,CAAC;MAC3D;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}