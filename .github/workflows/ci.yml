name: CI Pipeline

on:
  pull_request:
    branches:
      - '**'

permissions:
  contents: write
  pull-requests: write

jobs:
  code_quality:
    runs-on: ubuntu-latest
    steps:
      - name: Executar An√°lise Codacy
        run: |
          export CODACY_PROJECT_TOKEN=${{ secrets.CODACY_PROJECT_TOKEN }}
          bash <(curl -Ls https://coverage.codacy.com/get.sh) analyze --min-severity Medium || exit 1

  notify_codacy_issues:
    needs: [code_quality]
    if: failure()
    runs-on: ubuntu-latest

    steps:
      - name: Aguardar Codacy Finalizar
        run: |
          for i in {1..10}; do
            STATUS=$(gh api repos/${{ github.repository }}/commits/${{ github.sha }}/check-runs | jq -r '.check_runs[] | select(.name == "Codacy Static Code Analysis") | .status')
            echo "Codacy Status: $STATUS"
            if [[ "$STATUS" == "completed" ]]; then
              echo "‚úÖ Codacy terminou, continuando..."
              break
            fi
            echo "‚åõ Codacy ainda n√£o terminou, aguardando..."
            sleep 30  # Espera 30 segundos antes de verificar novamente
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comentar no Pull Request se Codacy falhar
        if: failure()
        run: |
          AUTHOR="${{ github.event.pull_request.user.login }}"
          gh pr comment ${{ github.event.pull_request.html_url }} --body "
          üö® Foram encontrados problemas de qualidade no c√≥digo!  

          üìå [Ver Relat√≥rio do Codacy](https://app.codacy.com/gh/A-MoVer/Integracao/issues)  

          ‚ö†Ô∏è Erros devem ser corrigidos antes do merge. üë§ Autor: @$AUTHOR"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  auto_merge_testes:
    needs: code_quality
    if: needs.code_quality.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Merge Autom√°tico para a Branch de Destino se Codacy Aprovar
        run: |
          gh pr merge ${{ github.event.pull_request.html_url }} --auto --squash || gh pr merge ${{ github.event.pull_request.html_url }} --admin --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify_teams:
    needs: [code_quality, auto_merge_testes, notify_codacy_issues]
    if: always()
    runs-on: ubuntu-latest

    steps:
      - name: Definir Mensagem de Notifica√ß√£o
        run: |
          echo "Iniciando notifica√ß√£o do Teams..."
          BRANCH="${{ github.event.pull_request.base.ref }}"
          AUTHOR="${{ github.event.pull_request.user.login }}"

          echo "Branch: $BRANCH"
          echo "Author: $AUTHOR"
          echo "Code Quality Result: ${{ needs.code_quality.result }}"
          echo "Auto Merge Result: ${{ needs.auto_merge_testes.result }}"

          if [[ "${{ needs.code_quality.result }}" == "success" && "${{ needs.auto_merge_testes.result }}" == "success" ]]; then
            MESSAGE="‚úÖ Nenhum erro encontrado. C√≥digo foi mesclado na branch '$BRANCH'. üë§ Autor: @$AUTHOR"
          else
            MESSAGE="üö® Problemas de qualidade no c√≥digo na branch '$BRANCH'!  
            üìå [Ver Relat√≥rio do Codacy](https://app.codacy.com/gh/A-MoVer/Integracao/issues)  
            ‚ö†Ô∏è Erros devem ser corrigidos antes do merge. üë§ Autor: @$AUTHOR"
          fi

          echo "Enviando notifica√ß√£o para o Teams..."
          curl -v -H "Content-Type: application/json" -d "{\"text\": \"$MESSAGE\"}" "${{ secrets.TEAMS_WEBHOOK_URL }}"

  require_approval_develop:
    needs: auto_merge_testes
    if: github.event.pull_request.base.ref == 'develop'
    runs-on: ubuntu-latest

    steps:
      - name: Requer Aprova√ß√£o Manual para Merge em 'develop'
        run: echo "üöÄ Merge para 'develop' requer 2 aprova√ß√µes antes de continuar."
